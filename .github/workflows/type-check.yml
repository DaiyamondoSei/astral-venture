
name: TypeScript Type Check and Validation

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  type-check:
    name: Type Check and Configuration Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create configuration validation script
        run: |
          echo "import { validateAppConfig } from './src/utils/config/configValidator.js';
          
          // Set dummy environment variables for testing
          process.env.VITE_SUPABASE_URL = 'https://test.supabase.co';
          process.env.VITE_SUPABASE_ANON_KEY = 'test-key';
          
          // Run validation
          const isValid = validateAppConfig();
          
          // Exit with appropriate code
          if (!isValid) {
            console.error('Configuration validation failed');
            process.exit(1);
          } else {
            console.log('Configuration validation successful');
            process.exit(0);
          }
          " > validate-config.mjs

      - name: Run configuration validation
        run: node validate-config.mjs

      - name: TypeScript type check
        run: npx tsc --noEmit

      - name: ESLint check
        run: npx eslint . --ext .ts,.tsx

      - name: Find unused exports
        run: npx ts-unused-exports tsconfig.json --excludePathsFromReport="node_modules,dist,build"

      - name: Circular dependency check
        run: npx madge --circular --extensions ts,tsx src/

      - name: Bundle size analysis
        run: |
          npm run build
          npx source-map-explorer 'dist/**/*.js' --html bundle-analysis.html

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: bundle-analysis.html

      - name: Check for type errors in edge functions
        run: |
          # Create a temporary tsconfig for Deno files
          echo '{
            "compilerOptions": {
              "target": "esnext",
              "module": "esnext",
              "moduleResolution": "node",
              "lib": ["esnext"],
              "strict": true,
              "noImplicitAny": true,
              "strictNullChecks": true,
              "noImplicitThis": true,
              "allowJs": true,
              "checkJs": true
            },
            "include": ["supabase/functions/**/*.ts"]
          }' > tsconfig.deno.json
          
          # Run type check on edge functions (informational only)
          npx typescript-deno-plugin || echo "Checking edge functions (informational only)"
          npx tsc -p tsconfig.deno.json --noEmit || echo "Edge functions have type errors. This is currently informational only."
